>>> divided_m = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(divided_m(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> print(divided_m(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(divided_m(matrix, 1.5))
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

>>> print(divided_m(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> print(divided_m())
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(divided_m(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> print(divided_m(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 'n']]
>>> print(divided_m(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(divided_m(matrix, '3'))
Traceback (most recent call last):
TypeError: div must be a number